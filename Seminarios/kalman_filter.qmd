---
title: "Kalman Filter"
author: "Felipe Marques"
format: 
  revealjs:
    incremental: true
    theme: [default, custom.scss]
    chalkboard: true
editor: visual
---

## Sumário

1.  [Introdução](#sec-introducao)
2.  [*State Space Representation*](#sec-state-space)
3.  [*Kalman Recursion*](#sec-kalman-recursion)
    1.  [*Kalman Filter*](#sec-kalman-filter)
    2.  [*Kalman Prediction*](#sec-kalman-prediction)
    3.  [*Kalman Smoothing*](#sec-kalman-smoothing)
4.  [Estimação dos parâmetros](#sec-estimacao)
5.  [Inferência com *Kalman Filter*](#sec-inferencia)

# State Space Representation

---

## Introdução {#sec-introducao}

A representação em estado de espaço é uma forma conveniente de representar as dinâmicas de uma variável através de duas equações que a descreve. (melhorar essa parte)

Essa representação será útil quando tratarmos dos algoritmos de Kalman.

---

## State Space Representation {#sec-state-space}

Considere,

-   $\underset{(n \times 1)}{\mathbf{y}_t}$ um vetor de retornos observados,
-   $\underset{(r \times 1)}{\xi_t}$ um vetor possívelmente não observado (*state vector*),
-   $\underset{(k \times 1)}{\mathbf{x}_t}$ um vetor de variáveis exógenas,
-   $\mathbf{F}_{(r \times r)}, \mathbf{A}_{(n \times k)}', \mathbf{H}'_{(n \times r)}$ matrizes de coeficientes.

---

Então, a representação em estado de espaço de um modelo é dada por:

. . .

$$
\begin{equation}
\begin{array}{ccl}
  \mathbf{y}_t & = & \mathbf{A}'\mathbf{x}_t + \mathbf{H}'\xi_t + \mathbf{w}_t \\
  \xi_{t+1} & = & \mathbf{F}\xi_t + \mathbf{v}_t
\end{array}
\end{equation}
$$

. . .

Onde, $\mathbf{v}_t,\mathbf{w}_t \sim WN$

. . .

$\textrm{Var}(\mathbf{v}_t) = \mathbf{Q}$ e $\textrm{Var}(\mathbf{w}_t) = \mathbf{R}$. Além disso, $\textrm{Cov}(\mathbf{v}_t,\mathbf{w}_k) = 0, \forall t,k$.

. . .

A equação de cima é chamada de *observation equation*, enquanto a de baixo é chamada de *state equation*.

---

## Exemplos

. . .

Considere o processo AR(p) dado da forma:

. . .

$$
y_{t+1} - \mu = \phi_1(y_t - \mu) + \ldots + \phi_p(y_{t-p+1} - \mu) + \epsilon_{t+1}
$$

. . .

onde $\epsilon_t \sim WN(0, \sigma^2)$

Podemos escrever esse modelo na forma de espaço de estado como segue:

---


(*Observation Equation*)
$$
\begin{bmatrix}
  y_{t+1} - \mu \\
  y_t - \mu \\
  \vdots \\
  y_{t-p+2} - \mu
\end{bmatrix} = 
\begin{bmatrix}
  \phi_1 & \phi_2 & \ldots & \phi_{p-1} & \phi_p \\
  1 & 0 & \ldots & 0 & 0 \\
  0 & 1 & \ldots & 0 & 0 \\ 
  \vdots & \vdots & \ldots & \vdots & \vdots \\
  0 & 0 & \ldots & 1 & 0 \\
\end{bmatrix}
\begin{bmatrix}
  y_t - \mu \\
  y_{t-1} - \mu \\
  \vdots \\
  y_{t-p+1} - \mu
\end{bmatrix} +
\begin{bmatrix}
  \epsilon_{t+1} \\
  0 \\
  \vdots \\
  0
\end{bmatrix}
$$


(*State Equation*)

$$
y_t = \mu + \begin{bmatrix}1 & 0 & \ldots & 0\end{bmatrix}\begin{bmatrix}
y_t - \mu \\
y_{t-1} \mu \\
\vdots \\
y_{t-p+1} - \mu
\end{bmatrix}
$$

---

# Kalman Recursion {#sec-kalman-recursion}

---

## Kalman Recursion

A recursão de Kalman é um método iterativo e recursivo para encontrar o melhor estimador linear de $\xi_t$, utilizando toda informação disponível até o momento.

Nesse sentido, em geral, o interesse está em um desses 3 casos:

-   *filter* ($\hat\xi_{t|t}$)

-   *prediction* ($\hat\xi_{t+1|t}$)

-   *smoothing* ($\hat\xi_{\tau|t}, \tau < t$)

## Kalman Filter {#sec-kalman-filter}

---

## Kalman Prediction {#sec-kalman-prediction}

---

## Kalman Smoothing {#sec-kalman-smoothing}

# Estimação dos parâmetros {#sec-estimacao}

## Máxima verossimilhança

A estimação dos parâmetros desconhecidos é feita através do método de máxima verossimilhança.

Caso $\xi_1$ e $\{\mathbf{w}_t,\mathbf{v}_t\}$

# Inferência com Kalman Filter {#sec-inferencia}



